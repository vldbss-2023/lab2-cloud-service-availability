apiVersion: operator.victoriametrics.com/v1beta1
kind: VMCluster
metadata:
  name: vmcluster
  namespace: observability
spec:
  replicationFactor: 2
  # replicationFactor instructs vminsert to store N copies for every ingested sample on N distinct vmstorage nodes.
  # This guarantees that all the stored data remains available for querying if up to N-1 vmstorage nodes are unavailable.
  vminsert:
    affinity:
      podAntiAffinity:
      # the replicas get the label app.kubernetes.io/name=vminsert.
      # The podAntiAffinity rule tells the scheduler to avoid placing multiple replicas with the app.kubernetes.io/name=vminsert label on a single node.
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - vminsert
            topologyKey: kubernetes.io/hostname
          weight: 100
    image: {}
    podMetadata:
      labels:
        owner: infra
    replicaCount: 2
    # This configuration will start two replicas (pods) of the vminsert service.
    # When one of the pods crashes, the other pod can still provide services
    resources:
      requests:
        cpu: "0.05"
        memory: 64Mi
      limits:
        cpu: "0.2"
        memory: 256Mi
  vmselect:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - vmselect
            topologyKey: kubernetes.io/hostname
          weight: 100
    cacheMountPath: /select-cache
    image: {}
    podMetadata:
      labels:
        owner: infra
    replicaCount: 2
    resources:
      requests:
        cpu: "0.05"
        memory: 64Mi
      limits:
        cpu: "0.2"
        memory: 256Mi
    storage:
      volumeClaimTemplate:
        metadata: {}
        spec:
          resources:
            requests:
              storage: 1Gi
        status: {}
  vmstorage:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - vmstorage
            topologyKey: kubernetes.io/hostname
          weight: 100
    image: {}
    podMetadata:
      labels:
        owner: infra
    replicaCount: 2
    resources:
      requests:
        cpu: "0.02"
        memory: 256Mi
      limits:
        cpu: "0.2"
        memory: 512Mi
    storage:
      volumeClaimTemplate:
        metadata: {}
        spec:
          resources:
            requests:
              storage: 5Gi
        status: {}
    storageDataPath: /vm-data